{
	"info": {
		"_postman_id": "184cd910-caad-407a-80ee-99c7429dfdb8",
		"name": "Mycollection1",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "27764694"
	},
	"item": [
		{
			"name": "one student data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code is 200\", ()=> {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Successful GET request\", ()=> {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is present\", ()=>\r",
							"{\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\",()=>{\r",
							"    pm.expect(pm.response.headers.get('COntent-Type')).to.eql('application/json; charset=utf-8');\r",
							"});\r",
							"\r",
							"pm.test(\"Cookies 'language' is present\", ()=>{\r",
							" pm.expect(pm.cookies.has('language')).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is above than 40ms\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.be.above(40);\r",
							"});\r",
							"\r",
							"const jsondata = pm.response.json();\r",
							"pm.test(\"Test data type of the response\", ()=>{\r",
							"    pm.expect(jsondata).to.be.an(\"object\");\r",
							"    pm.expect(jsondata.name).to.be.a(\"string\");\r",
							"    pm.expect(jsondata.id).to.be.a(\"number\");\r",
							"    pm.expect(jsondata.courses).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Test array properties\",() =>{\r",
							"pm.expect(jsondata.courses).to.include(\"Science\");\r",
							"pm.expect(jsondata.courses).to.have.members([\"Java\",\"Science\",\"History\"]);\r",
							"});\r",
							"\r",
							"pm.test(\"values of  fields in response\", ()=>\r",
							"{\r",
							"    var jsondata = pm.response.json();\r",
							"    pm.expect(jsondata.id).to.eql(1);\r",
							"    pm.expect(jsondata.name).to.eql(\"Ferthosi\");\r",
							"    pm.expect(jsondata.country).to.eql(\"United States\");\r",
							"    pm.expect(jsondata.phone).to.eql(\"1234567890\");\r",
							"    pm.expect(jsondata.courses[0]).to.eql(\"Mathematics\");\r",
							"    pm.expect(jsondata.courses[1]).to.eql(\"Science\");\r",
							"    pm.expect(jsondata.courses[2]).to.eql(\"History\");\r",
							"\r",
							"});\r",
							"\r",
							"//Jason schema validation \r",
							"\r",
							"var schema = {\r",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
							"  \"type\": \"object\",\r",
							"  \"properties\": {\r",
							"    \"id\": {\r",
							"      \"type\": \"integer\"\r",
							"    },\r",
							"    \"name\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"phone\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"country\": {\r",
							"      \"type\": \"string\"\r",
							"    },\r",
							"    \"courses\": {\r",
							"      \"type\": \"array\",\r",
							"      \"items\": [\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        {\r",
							"          \"type\": \"string\"\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  \"required\": [\r",
							"    \"id\",\r",
							"    \"name\",\r",
							"    \"phone\",\r",
							"    \"country\",\r",
							"    \"courses\"\r",
							"  ]\r",
							"}\r",
							"pm.test('Schema is valid',()=>{\r",
							"    pm.expect(tv4.validate(jsondata, schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": "http://localhost:3000/students/1"
			},
			"response": []
		},
		{
			"name": "All students Dataa",
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:3000/students"
			},
			"response": []
		},
		{
			"name": "Insert Student  Data",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n\r\n\"name\": \" Scott\",\r\n\"phone\": \"01701004559\",\r\n\r\n\"country\": \"Maleyshia\",\r\n    \"courses\": [\r\n      \"Software\",\r\n      \"History\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:3000/students"
			},
			"response": []
		},
		{
			"name": "Update student",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n        \"id\": 4,\r\n        \"name\": \"Musab\",\r\n        \"phone\": \"9999999999\",\r\n        \"country\": \"Bangladesh\",\r\n        \"courses\": [\r\n            \"Computer Science\",\r\n            \"Music\",\r\n            \"Physical Education\"\r\n        ]\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:3000/students/4"
			},
			"response": []
		},
		{
			"name": "Delete student",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "http://localhost:3000/students/5"
			},
			"response": []
		}
	]
}